<?xml version="1.0" encoding="UTF-8"?>
<issues format="5" by="lint 4.1.2">

    <issue
        id="MissingConstraints"
        severity="Error"
        message="This view is not constrained. It only has designtime positions, so it will jump to (0,0) at runtime unless you add the constraints"
        category="Correctness"
        priority="6"
        summary="Missing Constraints in ConstraintLayout"
        explanation="The layout editor allows you to place widgets anywhere on the canvas, and it records the current position with designtime attributes (such as `layout_editor_absoluteX`). These attributes are **not** applied at runtime, so if you push your layout on a device, the widgets may appear in a different location than shown in the editor. To fix this, make sure a widget has both horizontal and vertical constraints by dragging from the edge connections."
        errorLine1="    &lt;SearchView"
        errorLine2="     ~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="9"
            column="6"/>
    </issue>

    <issue
        id="MissingConstraints"
        severity="Error"
        message="This view is not constrained. It only has designtime positions, so it will jump to (0,0) at runtime unless you add the constraints"
        category="Correctness"
        priority="6"
        summary="Missing Constraints in ConstraintLayout"
        explanation="The layout editor allows you to place widgets anywhere on the canvas, and it records the current position with designtime attributes (such as `layout_editor_absoluteX`). These attributes are **not** applied at runtime, so if you push your layout on a device, the widgets may appear in a different location than shown in the editor. To fix this, make sure a widget has both horizontal and vertical constraints by dragging from the edge connections."
        errorLine1="    &lt;com.google.android.material.floatingactionbutton.FloatingActionButton"
        errorLine2="     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="18"
            column="6"/>
    </issue>

    <issue
        id="MissingConstraints"
        severity="Error"
        message="This view is not constrained. It only has designtime positions, so it will jump to (0,0) at runtime unless you add the constraints"
        category="Correctness"
        priority="6"
        summary="Missing Constraints in ConstraintLayout"
        explanation="The layout editor allows you to place widgets anywhere on the canvas, and it records the current position with designtime attributes (such as `layout_editor_absoluteX`). These attributes are **not** applied at runtime, so if you push your layout on a device, the widgets may appear in a different location than shown in the editor. To fix this, make sure a widget has both horizontal and vertical constraints by dragging from the edge connections."
        errorLine1="    &lt;TextView"
        errorLine2="     ~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="27"
            column="6"/>
    </issue>

    <issue
        id="MissingConstraints"
        severity="Error"
        message="This view is not constrained. It only has designtime positions, so it will jump to (0,0) at runtime unless you add the constraints"
        category="Correctness"
        priority="6"
        summary="Missing Constraints in ConstraintLayout"
        explanation="The layout editor allows you to place widgets anywhere on the canvas, and it records the current position with designtime attributes (such as `layout_editor_absoluteX`). These attributes are **not** applied at runtime, so if you push your layout on a device, the widgets may appear in a different location than shown in the editor. To fix this, make sure a widget has both horizontal and vertical constraints by dragging from the edge connections."
        errorLine1="    &lt;TextView"
        errorLine2="     ~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="35"
            column="6"/>
    </issue>

    <issue
        id="MissingConstraints"
        severity="Error"
        message="This view is not constrained. It only has designtime positions, so it will jump to (0,0) at runtime unless you add the constraints"
        category="Correctness"
        priority="6"
        summary="Missing Constraints in ConstraintLayout"
        explanation="The layout editor allows you to place widgets anywhere on the canvas, and it records the current position with designtime attributes (such as `layout_editor_absoluteX`). These attributes are **not** applied at runtime, so if you push your layout on a device, the widgets may appear in a different location than shown in the editor. To fix this, make sure a widget has both horizontal and vertical constraints by dragging from the edge connections."
        errorLine1="    &lt;Button"
        errorLine2="     ~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="43"
            column="6"/>
    </issue>

    <issue
        id="MissingConstraints"
        severity="Error"
        message="This view is not constrained. It only has designtime positions, so it will jump to (0,0) at runtime unless you add the constraints"
        category="Correctness"
        priority="6"
        summary="Missing Constraints in ConstraintLayout"
        explanation="The layout editor allows you to place widgets anywhere on the canvas, and it records the current position with designtime attributes (such as `layout_editor_absoluteX`). These attributes are **not** applied at runtime, so if you push your layout on a device, the widgets may appear in a different location than shown in the editor. To fix this, make sure a widget has both horizontal and vertical constraints by dragging from the edge connections."
        errorLine1="    &lt;Button"
        errorLine2="     ~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="51"
            column="6"/>
    </issue>

    <issue
        id="MissingConstraints"
        severity="Error"
        message="This view is not constrained. It only has designtime positions, so it will jump to (0,0) at runtime unless you add the constraints"
        category="Correctness"
        priority="6"
        summary="Missing Constraints in ConstraintLayout"
        explanation="The layout editor allows you to place widgets anywhere on the canvas, and it records the current position with designtime attributes (such as `layout_editor_absoluteX`). These attributes are **not** applied at runtime, so if you push your layout on a device, the widgets may appear in a different location than shown in the editor. To fix this, make sure a widget has both horizontal and vertical constraints by dragging from the edge connections."
        errorLine1="    &lt;Button"
        errorLine2="     ~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="59"
            column="6"/>
    </issue>

    <issue
        id="MissingConstraints"
        severity="Error"
        message="This view is not constrained. It only has designtime positions, so it will jump to (0,0) at runtime unless you add the constraints"
        category="Correctness"
        priority="6"
        summary="Missing Constraints in ConstraintLayout"
        explanation="The layout editor allows you to place widgets anywhere on the canvas, and it records the current position with designtime attributes (such as `layout_editor_absoluteX`). These attributes are **not** applied at runtime, so if you push your layout on a device, the widgets may appear in a different location than shown in the editor. To fix this, make sure a widget has both horizontal and vertical constraints by dragging from the edge connections."
        errorLine1="    &lt;ImageButton"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="67"
            column="6"/>
    </issue>

    <issue
        id="MissingConstraints"
        severity="Error"
        message="This view is not constrained. It only has designtime positions, so it will jump to (0,0) at runtime unless you add the constraints"
        category="Correctness"
        priority="6"
        summary="Missing Constraints in ConstraintLayout"
        explanation="The layout editor allows you to place widgets anywhere on the canvas, and it records the current position with designtime attributes (such as `layout_editor_absoluteX`). These attributes are **not** applied at runtime, so if you push your layout on a device, the widgets may appear in a different location than shown in the editor. To fix this, make sure a widget has both horizontal and vertical constraints by dragging from the edge connections."
        errorLine1="    &lt;ImageButton"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="75"
            column="6"/>
    </issue>

    <issue
        id="MissingConstraints"
        severity="Error"
        message="This view is not constrained. It only has designtime positions, so it will jump to (0,0) at runtime unless you add the constraints"
        category="Correctness"
        priority="6"
        summary="Missing Constraints in ConstraintLayout"
        explanation="The layout editor allows you to place widgets anywhere on the canvas, and it records the current position with designtime attributes (such as `layout_editor_absoluteX`). These attributes are **not** applied at runtime, so if you push your layout on a device, the widgets may appear in a different location than shown in the editor. To fix this, make sure a widget has both horizontal and vertical constraints by dragging from the edge connections."
        errorLine1="    &lt;HorizontalScrollView"
        errorLine2="     ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="83"
            column="6"/>
    </issue>

    <issue
        id="MissingConstraints"
        severity="Error"
        message="This view is not constrained. It only has designtime positions, so it will jump to (0,0) at runtime unless you add the constraints"
        category="Correctness"
        priority="6"
        summary="Missing Constraints in ConstraintLayout"
        explanation="The layout editor allows you to place widgets anywhere on the canvas, and it records the current position with designtime attributes (such as `layout_editor_absoluteX`). These attributes are **not** applied at runtime, so if you push your layout on a device, the widgets may appear in a different location than shown in the editor. To fix this, make sure a widget has both horizontal and vertical constraints by dragging from the edge connections."
        errorLine1="    &lt;ImageButton"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="96"
            column="6"/>
    </issue>

    <issue
        id="MissingConstraints"
        severity="Error"
        message="This view is not constrained. It only has designtime positions, so it will jump to (0,0) at runtime unless you add the constraints"
        category="Correctness"
        priority="6"
        summary="Missing Constraints in ConstraintLayout"
        explanation="The layout editor allows you to place widgets anywhere on the canvas, and it records the current position with designtime attributes (such as `layout_editor_absoluteX`). These attributes are **not** applied at runtime, so if you push your layout on a device, the widgets may appear in a different location than shown in the editor. To fix this, make sure a widget has both horizontal and vertical constraints by dragging from the edge connections."
        errorLine1="    &lt;EditText"
        errorLine2="     ~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="104"
            column="6"/>
    </issue>

    <issue
        id="FragmentTagUsage"
        severity="Warning"
        message="Replace the &lt;fragment> tag with FragmentContainerView."
        category="Correctness"
        priority="5"
        summary="Use FragmentContainerView instead of the &lt;fragment> tag"
        explanation="FragmentContainerView replaces the &lt;fragment> tag as the preferred                 way of adding fragments via XML. Unlike the &lt;fragment> tag, FragmentContainerView                 uses a normal `FragmentTransaction` under the hood to add the initial fragment,                 allowing further FragmentTransaction operations on the FragmentContainerView                 and providing a consistent timing for lifecycle events."
        url="https://developer.android.com/reference/androidx/fragment/app/FragmentContainerView.html"
        urls="https://developer.android.com/reference/androidx/fragment/app/FragmentContainerView.html"
        errorLine1="    &lt;fragment"
        errorLine2="     ~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main.xml"
            line="21"
            column="6"/>
    </issue>

    <issue
        id="VectorDrawableCompat"
        severity="Error"
        message="To use VectorDrawableCompat, you need to set `android.defaultConfig.vectorDrawables.useSupportLibrary = true` in `app\build.gradle`"
        category="Correctness"
        priority="5"
        summary="Using VectorDrawableCompat"
        explanation="To use VectorDrawableCompat, you need to make two modifications to your project. First, set `android.defaultConfig.vectorDrawables.useSupportLibrary = true` in your `build.gradle` file, and second, use `app:srcCompat` instead of `android:src` to refer to vector drawables."
        url="https://developer.android.com/guide/topics/graphics/vector-drawable-resources"
        urls="https://developer.android.com/guide/topics/graphics/vector-drawable-resources,https://medium.com/androiddevelopers/using-vector-assets-in-android-apps-4318fd662eb9"
        errorLine1="        app:srcCompat=&quot;@drawable/ic_next_black&quot;"
        errorLine2="        ~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="71"
            column="9"/>
    </issue>

    <issue
        id="VectorDrawableCompat"
        severity="Error"
        message="To use VectorDrawableCompat, you need to set `android.defaultConfig.vectorDrawables.useSupportLibrary = true` in `app\build.gradle`"
        category="Correctness"
        priority="5"
        summary="Using VectorDrawableCompat"
        explanation="To use VectorDrawableCompat, you need to make two modifications to your project. First, set `android.defaultConfig.vectorDrawables.useSupportLibrary = true` in your `build.gradle` file, and second, use `app:srcCompat` instead of `android:src` to refer to vector drawables."
        url="https://developer.android.com/guide/topics/graphics/vector-drawable-resources"
        urls="https://developer.android.com/guide/topics/graphics/vector-drawable-resources,https://medium.com/androiddevelopers/using-vector-assets-in-android-apps-4318fd662eb9"
        errorLine1="        app:srcCompat=&quot;@drawable/ic_prev_black&quot;"
        errorLine2="        ~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="79"
            column="9"/>
    </issue>

    <issue
        id="VectorDrawableCompat"
        severity="Error"
        message="To use VectorDrawableCompat, you need to set `android.defaultConfig.vectorDrawables.useSupportLibrary = true` in `app\build.gradle`"
        category="Correctness"
        priority="5"
        summary="Using VectorDrawableCompat"
        explanation="To use VectorDrawableCompat, you need to make two modifications to your project. First, set `android.defaultConfig.vectorDrawables.useSupportLibrary = true` in your `build.gradle` file, and second, use `app:srcCompat` instead of `android:src` to refer to vector drawables."
        url="https://developer.android.com/guide/topics/graphics/vector-drawable-resources"
        urls="https://developer.android.com/guide/topics/graphics/vector-drawable-resources,https://medium.com/androiddevelopers/using-vector-assets-in-android-apps-4318fd662eb9"
        errorLine1="        app:srcCompat=&quot;@drawable/ic_notifications_black_24dp&quot;"
        errorLine2="        ~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="100"
            column="9"/>
    </issue>

    <issue
        id="VectorDrawableCompat"
        severity="Error"
        message="To use VectorDrawableCompat, you need to set `android.defaultConfig.vectorDrawables.useSupportLibrary = true` in `app\build.gradle`"
        category="Correctness"
        priority="5"
        summary="Using VectorDrawableCompat"
        explanation="To use VectorDrawableCompat, you need to make two modifications to your project. First, set `android.defaultConfig.vectorDrawables.useSupportLibrary = true` in your `build.gradle` file, and second, use `app:srcCompat` instead of `android:src` to refer to vector drawables."
        url="https://developer.android.com/guide/topics/graphics/vector-drawable-resources"
        urls="https://developer.android.com/guide/topics/graphics/vector-drawable-resources,https://medium.com/androiddevelopers/using-vector-assets-in-android-apps-4318fd662eb9"
        errorLine1="        app:srcCompat=&quot;@drawable/ic_next_black&quot; />"
        errorLine2="        ~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_home.xml"
            line="119"
            column="9"/>
    </issue>

    <issue
        id="VectorDrawableCompat"
        severity="Error"
        message="To use VectorDrawableCompat, you need to set `android.defaultConfig.vectorDrawables.useSupportLibrary = true` in `app\build.gradle`"
        category="Correctness"
        priority="5"
        summary="Using VectorDrawableCompat"
        explanation="To use VectorDrawableCompat, you need to make two modifications to your project. First, set `android.defaultConfig.vectorDrawables.useSupportLibrary = true` in your `build.gradle` file, and second, use `app:srcCompat` instead of `android:src` to refer to vector drawables."
        url="https://developer.android.com/guide/topics/graphics/vector-drawable-resources"
        urls="https://developer.android.com/guide/topics/graphics/vector-drawable-resources,https://medium.com/androiddevelopers/using-vector-assets-in-android-apps-4318fd662eb9"
        errorLine1="        app:srcCompat=&quot;@drawable/ic_prev_black&quot; />"
        errorLine2="        ~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_home.xml"
            line="129"
            column="9"/>
    </issue>

    <issue
        id="VectorDrawableCompat"
        severity="Error"
        message="To use VectorDrawableCompat, you need to set `android.defaultConfig.vectorDrawables.useSupportLibrary = true` in `app\build.gradle`"
        category="Correctness"
        priority="5"
        summary="Using VectorDrawableCompat"
        explanation="To use VectorDrawableCompat, you need to make two modifications to your project. First, set `android.defaultConfig.vectorDrawables.useSupportLibrary = true` in your `build.gradle` file, and second, use `app:srcCompat` instead of `android:src` to refer to vector drawables."
        url="https://developer.android.com/guide/topics/graphics/vector-drawable-resources"
        urls="https://developer.android.com/guide/topics/graphics/vector-drawable-resources,https://medium.com/androiddevelopers/using-vector-assets-in-android-apps-4318fd662eb9"
        errorLine1="        app:srcCompat=&quot;@drawable/ic_notifications_black_24dp&quot; />"
        errorLine2="        ~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_home.xml"
            line="161"
            column="9"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.navigation:navigation-fragment than 2.2.2 is available: 2.3.4"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.navigation:navigation-fragment:2.2.2&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\build.gradle"
            line="45"
            column="5"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.navigation:navigation-ui than 2.2.2 is available: 2.3.4"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.navigation:navigation-ui:2.2.2&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\build.gradle"
            line="46"
            column="5"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.lifecycle:lifecycle-livedata-ktx than 2.2.0 is available: 2.3.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.lifecycle:lifecycle-livedata-ktx:2.2.0&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\build.gradle"
            line="47"
            column="5"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.lifecycle:lifecycle-viewmodel-ktx than 2.2.0 is available: 2.3.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\build.gradle"
            line="48"
            column="5"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.navigation:navigation-fragment-ktx than 2.2.2 is available: 2.3.4"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.navigation:navigation-fragment-ktx:2.2.2&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\build.gradle"
            line="49"
            column="5"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.navigation:navigation-ui-ktx than 2.2.2 is available: 2.3.4"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.navigation:navigation-ui-ktx:2.2.2&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\build.gradle"
            line="50"
            column="5"/>
    </issue>

    <issue
        id="GradleDynamicVersion"
        severity="Warning"
        message="Avoid using + in version numbers; can lead to unpredictable and unrepeatable builds (junit:junit:4.+)"
        category="Correctness"
        priority="4"
        summary="Gradle Dynamic Version"
        explanation="Using `+` in dependencies lets you automatically pick up the latest available version rather than a specific, named version. However, this is not recommended; your builds are not repeatable; you may have tested with a slightly different version than what the build server used. (Using a dynamic version as the major version number is more problematic than using it in the minor version position.)"
        errorLine1="    testImplementation &apos;junit:junit:4.+&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\build.gradle"
            line="52"
            column="5"/>
    </issue>

    <issue
        id="AllowBackup"
        severity="Warning"
        message="On SDK version 23 and up, your app data will be automatically backed up and restored on app install. Consider adding the attribute `android:fullBackupContent` to specify an `@xml` resource which configures which files to backup. More info: https://developer.android.com/training/backup/autosyncapi.html"
        category="Security"
        priority="3"
        summary="AllowBackup/FullBackupContent Problems"
        explanation="The `allowBackup` attribute determines if an application&apos;s data can be backed up and restored. It is documented at https://developer.android.com/reference/android/R.attr.html#allowBackup&#xA;&#xA;By default, this flag is set to `true` which means application data can be backed up and restored by the OS. Setting `allowBackup=&quot;false&quot;` opts the application out of being backed up and so users can&apos;t restore data related to it when they go through the device setup wizard.&#xA;&#xA;Allowing backups may have security consequences for an application. Currently `adb backup` allows users who have enabled USB debugging to copy application data off of the device. Once backed up, all application data can be read by the user. `adb restore` allows creation of application data from a source specified by the user. Following a restore, applications should not assume that the data, file permissions, and directory permissions were created by the application itself.&#xA;&#xA;To fix this warning, decide whether your application should support backup, and explicitly set `android:allowBackup=(true|false)&quot;`.&#xA;&#xA;If not set to false, and if targeting API 23 or later, lint will also warn that you should set `android:fullBackupContent` to configure auto backup."
        url="https://developer.android.com/training/backup/autosyncapi.html"
        urls="https://developer.android.com/training/backup/autosyncapi.html,https://developer.android.com/reference/android/R.attr.html#allowBackup"
        errorLine1="    &lt;application"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\AndroidManifest.xml"
            line="5"
            column="6"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.activity_main_detail` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.activity_horizontal_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;activity_horizontal_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\values\dimens.xml"
            line="3"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.activity_vertical_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;activity_vertical_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\values\dimens.xml"
            line="4"
            column="12"/>
    </issue>

    <issue
        id="UselessLeaf"
        severity="Warning"
        message="This `LinearLayout` view is useless (no children, no `background`, no `id`, no `style`)"
        category="Performance"
        priority="2"
        summary="Useless leaf layout"
        explanation="A layout that has no children or no background can often be removed (since it is invisible) for a flatter and more efficient layout hierarchy."
        errorLine1="        &lt;LinearLayout"
        errorLine2="         ~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="90"
            column="10"/>
    </issue>

    <issue
        id="UselessLeaf"
        severity="Warning"
        message="This `LinearLayout` view is useless (no children, no `background`, no `id`, no `style`)"
        category="Performance"
        priority="2"
        summary="Useless leaf layout"
        explanation="A layout that has no children or no background can often be removed (since it is invisible) for a flatter and more efficient layout hierarchy."
        errorLine1="        &lt;LinearLayout"
        errorLine2="         ~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_home.xml"
            line="142"
            column="10"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="    &lt;EditText"
        errorLine2="     ~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="104"
            column="6"/>
    </issue>

    <issue
        id="Autofill"
        severity="Warning"
        message="Missing `autofillHints` attribute"
        category="Usability"
        priority="3"
        summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="    &lt;EditText"
        errorLine2="     ~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_home.xml"
            line="163"
            column="6"/>
    </issue>

    <issue
        id="KtxExtensionAvailable"
        severity="Information"
        message="Add suffix `-ktx` to enable the Kotlin extensions for this library"
        category="Productivity"
        priority="4"
        summary="KTX Extension Available"
        explanation="Android KTX extensions augment some libraries with support for modern Kotlin language features like extension functions, extension properties, lambdas, named parameters, coroutines, and more.&#xA;&#xA;In Kotlin projects, use the KTX version of a library by replacing the dependency in your `build.gradle` file. For example, you can replace `androidx.fragment:fragment` with `androidx.fragment:fragment-ktx`."
        url="https://developer.android.com/kotlin/ktx"
        urls="https://developer.android.com/kotlin/ktx"
        errorLine1="    implementation &apos;androidx.navigation:navigation-fragment:2.2.2&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\build.gradle"
            line="45"
            column="5"/>
    </issue>

    <issue
        id="KtxExtensionAvailable"
        severity="Information"
        message="Add suffix `-ktx` to enable the Kotlin extensions for this library"
        category="Productivity"
        priority="4"
        summary="KTX Extension Available"
        explanation="Android KTX extensions augment some libraries with support for modern Kotlin language features like extension functions, extension properties, lambdas, named parameters, coroutines, and more.&#xA;&#xA;In Kotlin projects, use the KTX version of a library by replacing the dependency in your `build.gradle` file. For example, you can replace `androidx.fragment:fragment` with `androidx.fragment:fragment-ktx`."
        url="https://developer.android.com/kotlin/ktx"
        urls="https://developer.android.com/kotlin/ktx"
        errorLine1="    implementation &apos;androidx.navigation:navigation-ui:2.2.2&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\build.gradle"
            line="46"
            column="5"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="    &lt;com.google.android.material.floatingactionbutton.FloatingActionButton"
        errorLine2="     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="18"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="    &lt;ImageButton"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="67"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="    &lt;ImageButton"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="75"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="    &lt;ImageButton"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="96"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="    &lt;com.google.android.material.floatingactionbutton.FloatingActionButton"
        errorLine2="     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_home.xml"
            line="26"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="    &lt;ImageButton"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_home.xml"
            line="109"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="    &lt;ImageButton"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_home.xml"
            line="121"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        errorLine1="    &lt;ImageButton"
        errorLine2="     ~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_home.xml"
            line="148"
            column="6"/>
    </issue>

    <issue
        id="KeyboardInaccessibleWidget"
        severity="Warning"
        message="&apos;clickable&apos; attribute found, please also add &apos;focusable&apos;"
        category="Accessibility"
        priority="3"
        summary="Keyboard inaccessible widget"
        explanation="A widget that is declared to be clickable but not declared to be focusable is not accessible via the keyboard. Please add the `focusable` attribute as well."
        errorLine1="        android:clickable=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="22"
            column="9"/>
    </issue>

    <issue
        id="KeyboardInaccessibleWidget"
        severity="Warning"
        message="&apos;clickable&apos; attribute found, please also add &apos;focusable&apos;"
        category="Accessibility"
        priority="3"
        summary="Keyboard inaccessible widget"
        explanation="A widget that is declared to be clickable but not declared to be focusable is not accessible via the keyboard. Please add the `focusable` attribute as well."
        errorLine1="        android:clickable=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_home.xml"
            line="33"
            column="9"/>
    </issue>

    <issue
        id="LabelFor"
        severity="Warning"
        message="Missing accessibility label: where minSdk &lt; 17, you should provide an `android:hint`"
        category="Accessibility"
        priority="2"
        summary="Missing accessibility label"
        explanation="Editable text fields should provide an `android:hint` or, provided your `minSdkVersion` is at least 17, they may be referenced by a view with a `android:labelFor` attribute.&#xA;&#xA;When using `android:labelFor`, be sure to provide an `android:text` or an `android:contentDescription`.&#xA;&#xA;If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint."
        errorLine1="    &lt;EditText"
        errorLine2="     ~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="104"
            column="6"/>
    </issue>

    <issue
        id="LabelFor"
        severity="Warning"
        message="Missing accessibility label: where minSdk &lt; 17, you should provide an `android:hint`"
        category="Accessibility"
        priority="2"
        summary="Missing accessibility label"
        explanation="Editable text fields should provide an `android:hint` or, provided your `minSdkVersion` is at least 17, they may be referenced by a view with a `android:labelFor` attribute.&#xA;&#xA;When using `android:labelFor`, be sure to provide an `android:text` or an `android:contentDescription`.&#xA;&#xA;If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint."
        errorLine1="    &lt;EditText"
        errorLine2="     ~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_home.xml"
            line="163"
            column="6"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;미완료 과제가 3개 있습니다!&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;미완료 과제가 3개 있습니다!&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="31"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;2021년도 1학기&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;2021년도 1학기&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="39"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;강의시간표 보기&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;강의시간표 보기&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="47"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;지난 성적 열람&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;지난 성적 열람&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="55"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;캘린더 보기&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;캘린더 보기&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="63"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;안드로이드                            김철수                            수요일 11시 ~ 14시&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;안드로이드                            김철수                            수요일 11시 ~ 14시&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\activity_main_detail.xml"
            line="112"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;미완료 과제가 3개 있습니다!&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;미완료 과제가 3개 있습니다!&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_home.xml"
            line="46"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;2021년도 1학기&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;2021년도 1학기&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_home.xml"
            line="60"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;강의시간표 보기&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;강의시간표 보기&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_home.xml"
            line="75"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;지난 성적 열람&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;지난 성적 열람&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_home.xml"
            line="89"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;캘린더 보기&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;캘린더 보기&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_home.xml"
            line="103"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;안드로이드                            김철수                            수요일 11시 ~ 14시&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;안드로이드                            김철수                            수요일 11시 ~ 14시&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_home.xml"
            line="172"
            column="9"/>
    </issue>

    <issue
        id="RtlCompat"
        severity="Error"
        message="To support older versions than API 17 (project specifies 16) you must **also** specify `gravity` or `layout_gravity=&quot;center_horizontal&quot;`"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Right-to-left text compatibility issues"
        explanation="API 17 adds a `textAlignment` attribute to specify text alignment. However, if you are supporting older versions than API 17, you must **also** specify a gravity or layout_gravity attribute, since older platforms will ignore the `textAlignment` attribute."
        errorLine1="        android:textAlignment=&quot;center&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_classnote.xml"
            line="16"
            column="9"/>
    </issue>

    <issue
        id="RtlCompat"
        severity="Error"
        message="To support older versions than API 17 (project specifies 16) you must **also** specify `gravity` or `layout_gravity=&quot;center_horizontal&quot;`"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Right-to-left text compatibility issues"
        explanation="API 17 adds a `textAlignment` attribute to specify text alignment. However, if you are supporting older versions than API 17, you must **also** specify a gravity or layout_gravity attribute, since older platforms will ignore the `textAlignment` attribute."
        errorLine1="        android:textAlignment=&quot;center&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_grade.xml"
            line="16"
            column="9"/>
    </issue>

    <issue
        id="RtlCompat"
        severity="Error"
        message="To support older versions than API 17 (project specifies 16) you must **also** specify `gravity` or `layout_gravity=&quot;center_horizontal&quot;`"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Right-to-left text compatibility issues"
        explanation="API 17 adds a `textAlignment` attribute to specify text alignment. However, if you are supporting older versions than API 17, you must **also** specify a gravity or layout_gravity attribute, since older platforms will ignore the `textAlignment` attribute."
        errorLine1="        android:textAlignment=&quot;center&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_notifications.xml"
            line="16"
            column="9"/>
    </issue>

    <issue
        id="RtlCompat"
        severity="Error"
        message="To support older versions than API 17 (project specifies 16) you must **also** specify `gravity` or `layout_gravity=&quot;center_horizontal&quot;`"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Right-to-left text compatibility issues"
        explanation="API 17 adds a `textAlignment` attribute to specify text alignment. However, if you are supporting older versions than API 17, you must **also** specify a gravity or layout_gravity attribute, since older platforms will ignore the `textAlignment` attribute."
        errorLine1="        android:textAlignment=&quot;center&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\CHOI AREUM\AndroidStudioProjects\KAUMobile\app\src\main\res\layout\fragment_setting.xml"
            line="16"
            column="9"/>
    </issue>

</issues>
